{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Downloads/Resort/Client/src/Components/Category.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useState } from 'react'; //import {categories} from \"../data\"\n\nimport { publicRequest } from \"../requestMethods\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport jwt from \"jsonwebtoken\";\n/*const Container=styled.div`\ndisplay:flex;\npadding:20px;\njustify-content: space-between;\n`;\nconst sdiv=styled.div`\nflex:1;\njustify-content:space-between;`;\n\nconst adiv=styled.div`\nflex:1;\njustify-content:space-between;`;*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\ndisplay:flex;\npadding:20px;\nflex-wrap: wrap;\nflex-direction:column;\njustify-content:space-between;`;\n_c = Container;\nconst Img = styled.img`\nheight:8rem;\n`;\n\nconst Category = () => {\n  _s();\n\n  const [Message, setMessage] = useState(\"\");\n  const [Value, setValue] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [responseMessage, setResponse] = useState([]);\n  const [editedValue, setNewValue] = useState();\n  const [view, setView] = useState(true);\n  const [Id, setId] = useState();\n  const [s, setS] = useState(true);\n  const [data, setData] = useState(true);\n  const token = useSelector(state => state.user.currentUser);\n  var decoded = jwt.decode(token);\n  let email = decoded.email;\n\n  const recivedata = async (req, res) => {\n    const resp = await publicRequest.get(\"/user/display\");\n    console.log(\"final message\", res.data.message);\n    setResponse(resp.data.message);\n  };\n\n  useEffect(() => {\n    /*if(s===true){\n      const res=await publicRequest.get(\"/user/display\")\n      console.log(\"final message\",res.data.message)\n      setResponse(res.data.message)\n    }*/\n    recivedata;\n  }, []);\n  useEffect(async () => {\n    if (Message !== \"\") {\n      const res = await publicRequest.post(`/user/createmsg`, {\n        message: Value\n      });\n      setShow(true);\n      console.log(res);\n      setResponse(res.data.message);\n      setMessage(\"\");\n    }\n  }, [Value]);\n\n  const enable = () => {\n    setView(true);\n  };\n\n  const disable = () => {\n    setView(false);\n  };\n\n  const showMessage = e => {\n    setMessage(e.target.value);\n    console.log(Message);\n  };\n\n  const display = () => {};\n\n  const replace = (e, str) => {};\n\n  const deletemsg = async id => {\n    console.log(\"id\", id);\n    const res = await publicRequest.delete(`/user/d?id=${id}`);\n    console.log(\"deleted\", res.data.message);\n    setS(true);\n    setData(true);\n  };\n\n  const editmsg = async id => {\n    setId(id);\n    console.log(\"id\", id);\n    const res = await publicRequest.get(`/user/msg?id=${id}`);\n    console.log(res.data.message.message);\n    setMessage(res.data.message.message);\n    setView(false);\n  };\n\n  const update = async () => {\n    console.log(Id, Message);\n    const res = await publicRequest.put(`/user/msg?id=${Id}&message=${Message}`);\n    console.log(res.data.message.message);\n    setValue(res.data.message.message);\n    setView(true);\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /* <>\n     <Container>\n        \n        \n        <sdiv>\n        <h1>Generate your message  </h1>\n        <input type=\"text\" value={Message} onChange={showMessage}/>\n        <button onClick={()=>setValue(Message)}>Ok</button>\n        </sdiv>\n       \n        \n        \n     </Container>\n     /*<Container>\n     <adiv>\n        {true && <>{responseMessage.map((item)=><h1>{item.message}</h1>)}</>}\n        </adiv>\n     </Container>\n    \n     \n     </>*/\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"sdiv\", {\n        children: [\"     \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"welcome \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Generate your message  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Message,\n          onChange: showMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 12\n        }, this), view ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setValue(Message),\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: update,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 1\n      }, this), responseMessage.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editmsg(item.message_id),\n          className: \"btn-primary\",\n          children: \"Edite\"\n        }, item.message_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletemsg(item.message_id),\n          className: \"btn-primary\",\n          children: \"Delete\"\n        }, item.message_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Category, \"uX9xQbnrfvuw2SNbZm2akK1NhHQ=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = Category;\nexport default Category;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Category\");","map":{"version":3,"sources":["/home/nithin/Downloads/Resort/Client/src/Components/Category.js"],"names":["styled","React","useEffect","useState","publicRequest","Link","useSelector","jwt","Container","div","Img","img","Category","Message","setMessage","Value","setValue","show","setShow","responseMessage","setResponse","editedValue","setNewValue","view","setView","Id","setId","s","setS","data","setData","token","state","user","currentUser","decoded","decode","email","recivedata","req","res","resp","get","console","log","message","post","enable","disable","showMessage","e","target","value","display","replace","str","deletemsg","id","delete","editmsg","update","put","map","item","message_id"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useState } from 'react'\n//import {categories} from \"../data\"\nimport { publicRequest } from \"../requestMethods\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport jwt from \"jsonwebtoken\"\n\n\n\n/*const Container=styled.div`\ndisplay:flex;\npadding:20px;\njustify-content: space-between;\n`;\nconst sdiv=styled.div`\nflex:1;\njustify-content:space-between;`;\n\nconst adiv=styled.div`\nflex:1;\njustify-content:space-between;`;*/\nconst Container=styled.div`\ndisplay:flex;\npadding:20px;\nflex-wrap: wrap;\nflex-direction:column;\njustify-content:space-between;`;\nconst Img=styled.img`\nheight:8rem;\n`;\n\n\nconst Category = () => {\n    const [Message,setMessage]=useState(\"\")\n    const [Value,setValue]=useState(\"\")\n    const [show,setShow]=useState(false)\n    const [responseMessage,setResponse]=useState([])\n    const [editedValue,setNewValue]=useState()\n    const [view,setView]=useState(true)\n    const [Id,setId]=useState()\n    const [s,setS]=useState(true)\n    const [data,setData]=useState(true)\n    const token=useSelector(state=>state.user.currentUser);\n    var decoded = jwt.decode(token);\n    let email=decoded.email;\n    const recivedata=async(req,res)=>{\n        const resp=await publicRequest.get(\"/user/display\")\n          console.log(\"final message\",res.data.message)\n          setResponse(resp.data.message)\n    }\n    useEffect(()=>{\n        /*if(s===true){\n          const res=await publicRequest.get(\"/user/display\")\n          console.log(\"final message\",res.data.message)\n          setResponse(res.data.message)\n        }*/\n        recivedata\n\n    },[])\n\n    useEffect(async()=>{ \n        if(Message!==\"\"){\n       const res=await publicRequest.post(`/user/createmsg`,{message:Value})\n        \n       setShow(true)\n       console.log(res)\n       setResponse(res.data.message)\n       setMessage(\"\")\n        }\n        \n    },[Value])\n    \n    const enable=()=>{\n        setView(true)\n    }\n    const disable=()=>{\n        setView(false)\n    }\n\n    const showMessage=(e)=>{\n        setMessage(e.target.value)\n        console.log(Message)\n    }\n    const display=()=>{\n    \n    }\n\n   const replace=(e,str)=>{\n       \n   }\n   const deletemsg=async(id)=>{\n    console.log(\"id\",id)\n    const res=await publicRequest.delete(`/user/d?id=${id}`)\n    console.log(\"deleted\",res.data.message)\n    setS(true)\n    setData(true)\n   }\n   const editmsg=async(id)=>{\n    setId(id)\n    console.log(\"id\",id)\n    const res=await publicRequest.get(`/user/msg?id=${id}`)\n    console.log(res.data.message.message)\n    setMessage(res.data.message.message)\n    setView(false)\n   }\n   const update=async()=>{\n       console.log(Id,Message)\n       const res=await publicRequest.put(`/user/msg?id=${Id}&message=${Message}`)\n       console.log(res.data.message.message)\n       setValue(res.data.message.message)\n       setView(true)\n       \n   }\n\n    return (\n       /* <>\n        <Container>\n           \n           \n           <sdiv>\n           <h1>Generate your message  </h1>\n           <input type=\"text\" value={Message} onChange={showMessage}/>\n           <button onClick={()=>setValue(Message)}>Ok</button>\n           </sdiv>\n          \n           \n           \n        </Container>\n        /*<Container>\n        <adiv>\n           {true && <>{responseMessage.map((item)=><h1>{item.message}</h1>)}</>}\n           </adiv>\n        </Container>\n       \n        \n        </>*/\n        <Container>\n\n<sdiv>     <h2>welcome {email}</h2>\n           <h1>Generate your message  </h1>\n           <input type=\"text\" value={Message} onChange={showMessage}/>\n           {view ? <button onClick={()=>setValue(Message)}>Ok</button>:<button onClick={update}>update</button>}\n           </sdiv>\n          \n          {responseMessage.map((item)=>(\n            \n            <div>\n        \n        <div>\n          <h1>{item.message}</h1>\n        </div>\n        <button onClick={()=>editmsg(item.message_id)}  className=\"btn-primary\" key={item.message_id}>\n          Edite\n        </button>\n        <button onClick={()=>deletemsg(item.message_id)}  className=\"btn-primary\" key={item.message_id}>\n          Delete\n          </button>\n          {/*<button onClick={enable}>Edite</button>{view && <input type=\"text\"/>}{view &&<button onClick={disable}>update</button>}*/}\n    </div>\n    ))}\n      \n   \n    \n        </Container>\n    )\n}\n\nexport default Category"]},"metadata":{},"sourceType":"module"}